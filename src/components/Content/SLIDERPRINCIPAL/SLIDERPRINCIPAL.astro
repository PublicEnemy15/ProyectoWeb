<!-- Sección de inicio - Esta es la sección principal de la página de inicio que contiene un carrusel de destacados -->
<div class="home-landing">
 <section class="highlights-slider">
    <div class="highlights-slider__items">

    <!-- Primer elemento del carrusel (índice 0) -->
    <div data-index="0" class="highlights-slider__item">
        <a href="/series/GOKURAKUGAI/gokurakugai" class="highlights-slider__item-link nts-app Poster-contenedor-hover" target="_self" rel="">
            <img class="highlights-slider__large-image" src="src/assets/img/SliderPrincipal/P1.webp" alt="" fetchpriority="high">
            <img class="highlights-slider__small-image" src="src/assets/img/SliderPrincipal/P1.webp" alt="" fetchpriority="high">
                <div class="colorize" style="background-color: rgb(185, 54, 179);" ></div>
        </a>
            <div class="highlights-slider__contents">
                <div class="highlights-slider__contents-wrapper">
            </div>
        </div>
    </div>

    <div data-index="1" class="highlights-slider__item">
        <a href="/404" class="highlights-slider__item-link nts-app Poster-contenedor-hover" target="_self" rel="">
            <img class="highlights-slider__large-image" src="src/assets/img/SliderPrincipal/P2.webp" alt="" loading="lazy">
            <img class="highlights-slider__small-image" src="src/assets/img/SliderPrincipal/P2.webp" alt="" loading="lazy">
                <div class="colorize" style="background-color: rgb(0, 119, 255);" ></div>
        </a>
            <div class="highlights-slider__contents">
                <div class="highlights-slider__contents-wrapper">
            </div>
        </div>
    </div>

    <div data-index="2" class="highlights-slider__item">
        <a href="/404" class="highlights-slider__item-link nts-app Poster-contenedor-hover" target="_self" rel="">
            <img class="highlights-slider__large-image" src="src/assets/img/SliderPrincipal/P3.webp" alt="" loading="lazy">
            <img class="highlights-slider__small-image" src="src/assets/img/SliderPrincipal/P3.webp" alt="" loading="lazy">
                <div class="colorize" style="background-color: rgb(0, 248, 165);" ></div>
        </a>
            <div class="highlights-slider__contents">
                <div class="highlights-slider__contents-wrapper">
            </div>
        </div>
    </div>
    
    <div data-index="3" class="highlights-slider__item">
        <a href="/404" class="highlights-slider__item-link nts-app Poster-contenedor-hover" target="_self" rel="">
            <img class="highlights-slider__large-image" src="src/assets/img/SliderPrincipal/P4.webp" alt="" loading="lazy">
            <img class="highlights-slider__small-image" src="src/assets/img/SliderPrincipal/P4.webp" alt="" loading="lazy">
                <div class="colorize" style="background-color: rgb(248, 182, 0);" ></div>
        </a>
            <div class="highlights-slider__contents">
                <div class="highlights-slider__contents-wrapper">
            </div>
        </div>
    </div>

    <!-- Panel de controles del carrusel -->
    <div class="highlights-panel">
      <div class="highlights-tracker">
        <div class="highlights-scrollbar">
          <div class="highlights-scrollbar-thumb"></div>
        </div>
        <!-- Contador de elementos -->
        <div class="highlights-tracker__index body-s">1 / ...</div>
      </div>

      <!-- Botones de control (anterior, reproducir/pausar, siguiente) -->
      <div class="highlights-controls">
        <!-- Botón anterior (flecha izquierda) -->
        <button id="prevBtn">
          <svg style="transform:rotate(180deg)" class="nts-icon nts-icon--inverted KITH-icono-ss" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600 600">
            <path d="M150 117l60-61 240 244-240 244-60-61 180-183-180-183z"></path>
          </svg>
        </button>

        <!-- Botón de reproducción -->
        <button id="playBtn">
          <svg id= "icon-play" class="nts-icon nts-icon--inverted KITH-icono-ss" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600 600">
            <title>Play</title>
            <g id="_x33_--Hidden-_x28_closing-up_x29_-" transform="translate(-772 -385)">
              <g id="Drawer" transform="translate(0 43)">
                <g id="_x32_" transform="translate(18)">
                  <path id="play" d="M1260.4 651.3L882.8 861.2c-4.4 2.4-8.2 2.7-11.2 1-3.1-1.7-4.6-5.1-4.6-10.2V433.2c0-4.8 1.5-8.2 4.6-10.2 3.1-2 6.8-1.7 11.2 1l377.6 210c4.4 2.4 6.6 5.3 6.6 8.7 0 3.3-2.2 6.2-6.6 8.6z"></path>
                </g>
              </g>
            </g>
          </svg>

           <!-- Icono de PAUSA (se muestra cuando está en reproducción) -->
          <svg id="icon-pause" class="nts-icon nts-icon--inverted KITH-icono-ss" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600 600" style="display: none;">
            <path d="M143.2 118.36h101.19a10 10 0 0 1 10 10v343.32a10 10 0 0 1-10 10H143.2a10 10 0 0 1-9.95-10V128.32a10 10 0 0 1 9.95-9.96zm211.91 0H456.3a10 10 0 0 1 9.95 10v343.32a10 10 0 0 1-9.95 10H355.11a10 10 0 0 1-9.95-10V128.32a10 10 0 0 1 9.95-9.96z"/>
          </svg>
        </button>
        
        <!-- Botón siguiente (flecha derecha) -->
        <button id="nextBtn">
          <svg class="nts-icon nts-icon--inverted KITH-icono-ss" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600 600">
            <path d="M150 117l60-61 240 244-240 244-60-61 180-183-180-183z"></path>
          </svg>
        </button>
      </div>
    </div>
  </section>


  <!-- Main Article Info Box -->
  <div class="ArticuloPrincipal-infoBox">
    <h2>MANGA 1 PRUEBA FUNCIONALIDAD SLIDER</h2>
    <h1>NOMBRE DEL MANGA</h1>
      <div class="ArticuloPrincipal-infoBox-footer">
        <div class="ArticuloPrincipal-autor">AUTOR</div>
      <a href="/404">Ver más información</a>
    </div>
  </div>
</div>

 <script>
  // DOM Elements
  const prevBtn = document.getElementById("prevBtn");
  const slides = document.querySelectorAll(".highlights-slider__item") as NodeListOf<HTMLElement>;
  const indexDisplay = document.querySelector(".highlights-tracker__index") as HTMLElement | null;
  const nextBtn = document.getElementById("nextBtn");
  const playBtn = document.getElementById("playBtn");
  const iconPlayEl = document.getElementById("icon-play");
  const iconPauseEl = document.getElementById("icon-pause");
  const highlightsPanel = document.querySelector(".highlights-panel") as HTMLElement;

  const iconPlay = iconPlayEl instanceof SVGElement ? iconPlayEl : null;
  const iconPause = iconPauseEl instanceof SVGElement ? iconPauseEl : null;

  // Slides Information
  const slidesInfo = [
    {
      title: "Gokurakugai, un luminoso y bullicioso barrio obrero con un lado oscuro oculto.",
      name: "GOKURAKUGAI",
      author: "Yuto Sano"
    },
    {
      title: "MANGA 2 PRUEBA FUNCIONALIDAD SLIDER",
      name: "NOMBRE DEL MANGA 2",
      author: "AUTOR 2"
    },
    {
      title: "MANGA 3 PRUEBA FUNCIONALIDAD SLIDER",
      name: "NOMBRE DEL MANGA 3",
      author: "AUTOR 3"
    },
    {
      title: "MANGA 4 PRUEBA FUNCIONALIDAD SLIDER",
      name: "NOMBRE DEL MANGA 4",
      author: "AUTOR 4"
    }
  ];

  let currentIndex = 0;
  let autoplay = true;
  let interval: number | undefined;

// Initial slides setup
slides.forEach((slide, i) => {
  slide.style.position = "absolute";
  slide.style.transition = "transform 1s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.5s ease";
  slide.style.top = "0";
  slide.style.left = "0";
  slide.style.width = "100%";
  slide.style.height = "100%";
  slide.style.willChange = "transform"; 
  slide.style.transform = `translateX(${i * 100}%)`;
});

  // Core functions
  function showSlide(index: number): void {
    slides.forEach((slide, i) => {
      slide.style.transform = `translateX(${(i - index) * 100}%)`;
    });

    updateInfoBox(index);
    updateProgress(index);
  }

  function updateInfoBox(index: number): void {
    const info = slidesInfo[index];
    const infoBox = document.querySelector('.ArticuloPrincipal-infoBox');
    if (infoBox) {
      infoBox.innerHTML = `
        <h2>${info.title}</h2>
        <h1>${info.name}</h1>
        <div class="ArticuloPrincipal-infoBox-footer">
          <div class="ArticuloPrincipal-autor">${info.author}</div>
          <a href="/404">Ver más información</a>
        </div>
      `;
    }
  }

function updateProgress(index: number): void {
  if (indexDisplay) {
    indexDisplay.textContent = `${index + 1} / ${slides.length}`;
  }

  const scrollbarThumb = document.querySelector(".highlights-scrollbar-thumb") as HTMLElement | null;
  if (scrollbarThumb) {

    const width = (1 / slides.length) * 100;

    const translation = (index / (slides.length - 1)) * (325 - width);
    
    scrollbarThumb.style.width = `${width}%`;
    scrollbarThumb.style.transform = `translateX(${translation}%)`;
  }
}

  function goToPrevious(): void {
    currentIndex = (currentIndex - 1 + slides.length) % slides.length;
    showSlide(currentIndex);
  }

  function goToNext(): void {
    currentIndex = (currentIndex + 1) % slides.length;
    showSlide(currentIndex);
  }

  function startAutoplay(): void {
    stopAutoplay();
    interval = window.setInterval(goToNext, 6000); // 6 segundos
  }

  function stopAutoplay(): void {
    if (interval !== undefined) {
      clearInterval(interval);
    }
  }

  function updateIcon(): void {
    if (iconPlay && iconPause) {
      iconPlay.style.display = autoplay ? "none" : "inline";
      iconPause.style.display = autoplay ? "inline" : "none";
    }
  }

  // Event Listeners
  prevBtn?.addEventListener("click", () => {
    goToPrevious();
    if (autoplay) {
      stopAutoplay();
      interval = window.setInterval(goToNext, 3000);
    }
  });

  nextBtn?.addEventListener("click", () => {
    goToNext();
    if (autoplay) {
      stopAutoplay();
      interval = window.setInterval(goToNext, 3000);
    }
  });
  
  playBtn?.addEventListener("click", () => {
    autoplay = !autoplay;
    updateIcon();
    autoplay ? startAutoplay() : stopAutoplay();
  });

  // Initialization
  showSlide(currentIndex);
  startAutoplay();
  updateIcon();
</script>