---
import { Image } from 'astro:assets';

import portada1 from '../../../assets/img/Portadas/Portada1.webp';
import portada2 from '../../../assets/img/Portadas/Portada2.webp';
import portada3 from '../../../assets/img/Portadas/Portada3.webp';
import portada4 from '../../../assets/img/Portadas/Portada4.webp';
import portada5 from '../../../assets/img/Portadas/Portada5.webp';
import portada6 from '../../../assets/img/Portadas/Portada6.webp';
import portada7 from '../../../assets/img/Portadas/Portada7.webp';
import portada8 from '../../../assets/img/Portadas/Portada8.webp';

// Define el tipo de datos
interface MangaItem {
  id: string;
  title: string;
  image: ImageMetadata;
  href: string;
  alt?: string;
}

// Props del componente
interface Props {
  mangas?: MangaItem[];
  title?: string;
  subtitle?: string;
  calendarLink?: string;
  calendarText?: string;
}

// Datos por defecto
const defaultMangas: MangaItem[] = [
  { id: "1", title: "TESTING COMO ASAP", image: portada1, href: "/404" },
  { id: "2", title: "TESTING COMO ASAP", image: portada2, href: "/404" },
  { id: "3", title: "TESTING COMO ASAP", image: portada3, href: "/404" },
  { id: "4", title: "TESTING COMO ASAP", image: portada4, href: "/404" },
  { id: "5", title: "TESTING COMO ASAP", image: portada5, href: "/product/origin-10/" },
  { id: "6", title: "TESTING COMO ASAP", image: portada6, href: "/product/origin-10/" },
  { id: "7", title: "TESTING COMO ASAP", image: portada7, href: "/product/origin-10/" },
  { id: "8", title: "TESTING COMO ASAP", image: portada8, href: "/product/origin-10/" }
];

// Props o datos por defecto
const {
  mangas = defaultMangas,
  title = "PROXIMOS LANZAMIENTOS",
  subtitle = "No te lo pierdas",
  calendarLink = "/404",
  calendarText = "Calendario de lanzamientos"
} = Astro.props;
---

<div class="ArticleStrip">
  <div class="ProxLanzWheel">
    <section class="KITHSlider prox-lanzamientos-slider">
      <div class="KITHSlider-contentWrapper">
        <h3>{title}</h3>
        <h2>{subtitle}</h2>

        <div class="KITHSlider-sliderWrapper">
          <div class="Slider">
            <div class="Slider-tape" style="transform: translateX(0px);">
              {mangas.map((manga, index) => {
                const isHidden = index >= 4;
                return (
                  <div class={`Slider-item ${isHidden ? 'Slider-item-hidden Slider-item-right Slider-item-1' : ''}`}>
                    <a class="KITHWheelItem" aria-label={manga.title} href={manga.href}>
                      <div class="InnerBorder-Product">
                        <div class="Item-Thumbnail-Product" aria-label={manga.title}>
                          <div class="ui-product-poster-container ui-product-poster-container-hover" style="padding-top: 125%;">
                            <div class="ui-product-poster-container-2">
                              <div class="ui-product-poster-wrapper">
                                <Image
                                  src={manga.image}
                                  alt={manga.alt || manga.title}
                                  sizes="(max-width: 991px) 145px, (max-width: 1199px) 288px, 405px"
                                  loading="lazy"
                                  class="ui-product-poster-image"
                                />
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="TituloItem" aria-label={`title for ${manga.title}`}>
                        {manga.title}
                      </div>
                    </a>
                  </div>
                );
              })}
            </div>

            <div class="KITHSlider-bullets">
              {Array.from({ length: Math.ceil(mangas.length / 4) }, (_, i) => (
                <button type="button" class={i === 0 ? "active" : ""} title={`Page ${i + 1}`}></button>
              ))}
            </div>

            <div class="KITHSlider-btnWrapper prev">
              <button type="button" tabindex="-1">
                <svg viewBox="0 0 96 96" xmlns="http://www.w3.org/2000/svg">
                  <path d="M69.8437,43.3876,33.8422,13.3863a6.0035,6.0035,0,0,0-7.6878,9.223l30.47,25.39-30.47,25.39a6.0035,6.0035,0,0,0,7.6878,9.2231L69.8437,52.6106a6.0091,6.0091,0,0,0,0-9.223Z"></path>
                </svg>
              </button>
            </div>

            <div class="KITHSlider-btnWrapper next visible">
              <button type="button" tabindex="-1">
                <svg viewBox="0 0 96 96" xmlns="http://www.w3.org/2000/svg">
                  <path d="M69.8437,43.3876,33.8422,13.3863a6.0035,6.0035,0,0,0-7.6878,9.223l30.47,25.39-30.47,25.39a6.0035,6.0035,0,0,0,7.6878,9.2231L69.8437,52.6106a6.0091,6.0091,0,0,0,0-9.223Z"></path>
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>
    </section>

    <a href={calendarLink}>
      <div role="button" class="arrow-container" aria-label="View Release Schedule">
        <span class="arrow-btn with-arrow text-bold undefined">{calendarText}</span>
        <div class="icon-wrapper">
          <svg viewBox="0 0 34 34" xmlns="http://www.w3.org/2000/svg" fill="white" width="80" class="icon">
            <path d="m15.496 0 15.939 15.939H0v2.122h31.435L15.495 34H18.5L34 18.5v-3.004L18.5 0h-3.004Z"></path>
          </svg>
        </div>
      </div>
    </a>
  </div>
</div>


<script>
  import { ProximosLanzamientosSlider } from './ProximosLanzamientosSlider';

  document.addEventListener('DOMContentLoaded', () => {
    new ProximosLanzamientosSlider({
      itemsPerPage: 4,
      sliderSelector: '.prox-lanzamientos-slider .Slider-tape',
      itemSelector: '.prox-lanzamientos-slider .Slider-item',
      nextBtnSelector: '.prox-lanzamientos-slider .KITHSlider-btnWrapper.next button',
      prevBtnSelector: '.prox-lanzamientos-slider .KITHSlider-btnWrapper.prev button',
      bulletsSelector: '.prox-lanzamientos-slider .KITHSlider-bullets'
    });
  });
</script>